・選択ソート(selection sort)
１、ソート対象の列の中から最小値を見つけ、その値と先頭を交換する
２、先頭を除いた残りの列をソート対象とし、１に戻る。ソート対象列の要素が１個になったら停止する。

・挿入ソート(insertion sort)
「整列済み部分」の適切な位置に残りの「未整列部分」の要素を挿入していく。
■■■□□□□
■：整列済み
□：未整列

・バケットソート(bucket sort) 　←未実装
いくつかのグループに分けることによって整列するアルゴリズム

・バブルソート(bubble sort)
１、隣同士のペアを比較し、降順なら入れ替える。これを列の最後尾から先頭に向けて行う。
２、先頭を除いた残りの列をソート対象とし、１に戻る。ソート対象列の要素が１個になったら停止する。

・分割統治法(divide and conquer) ←capter6
大きい入力値(e.g. fib(N))に対する問題を解くために、必要となった小さい入力値(e.g. fib(N-2), fib(N-1))に対する問題を解いていく方法

・動的計画法(dynamic programing) ←capter6(p65)
同じ計算を減らすため、一度計算した結果を記憶領域に保存して再利用する方法
こちらも小さな問題の解から大きな問題を解く方法であり、必要な小問題を１回ずつしか計算しなくてよい半面、不要な小問題を解いてしまう可能性がある。
